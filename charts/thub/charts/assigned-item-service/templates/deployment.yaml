apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "assigned-item-service.fullname" . }}
  labels:
    {{- include "assigned-item-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "assigned-item-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # Automatically roll deployment when a configmap file changes
        # https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum/datasource-config: {{ include (print $.Template.BasePath "/datasource-configmap.yaml") . | sha256sum }}
        checksum/jms-properties-config: {{ include "thub.grailsAppConfigmapPropertiesFile" . | sha256sum }}
      labels:
        {{- include "assigned-item-service.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "assigned-item-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.assignedItemService.servicePort }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: services.user
            value: "http://{{ .Values.global.userService.serviceName }}:{{ .Values.global.userService.servicePort }}"
          - name: services.item
            value: "http://{{ .Values.global.itemService.serviceName }}:{{ .Values.global.itemService.servicePort }}"
          - name: server.port
            value: {{ .Values.global.assignedItemService.servicePort | quote }}
          envFrom:
          - configMapRef:
              name: {{ include "assigned-item-service.datasourceConfigmapName" . }}
          - configMapRef:
              name: {{ .Values.global.activemqBrokerConfigMapName }}
          - configMapRef:
              name: {{ .Values.global.sharedSettingsConfigMapName }}
          - configMapRef:
              name: {{ include "assigned-item-service.assignedItemServiceConfigmapName" . }}
          volumeMounts:
          - name: application-config
            mountPath: /home/app/config
            readOnly: true
      {{- if .Values.liquibaseImage.enabled }}
      initContainers:
        - name: "liquibase-{{ .Chart.Name }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.liquibaseImage.repository }}:{{ .Values.liquibaseImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.liquibaseImage.pullPolicy }}
          resources:
            {{- toYaml .Values.liquibaseResources | nindent 12 }}
          env:
          - name: URL
            valueFrom:
              configMapKeyRef:
                name: {{ include "assigned-item-service.datasourceConfigmapName" . }}
                key: liquibaseUrl
          - name: USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "assigned-item-service.datasourceConfigmapName" . }}
                key: dataSource.username
          - name: PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{ include "assigned-item-service.datasourceConfigmapName" . }}
                key: dataSource.password
      {{- end }}
      volumes:
        - name: application-config
          configMap:
            # Name of the ConfigMap containing the files we want
            # to add to the container
            name: {{ .Values.global.jmsPropertiesConfigMapName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
