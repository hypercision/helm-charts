{{- if .Values.assignedItemsSchedulerJob.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "lms-data-service.assignedItemsSchedulerJobName" . }}
  # These labels do not also get added to the pods created by this job
  labels:
    {{- include "lms-data-service.labels" . | nindent 4 }}
    jobCommonName: lms-assigned-items-scheduler-job
  annotations:
    description: >
      Sends a message to the LMS Data Service application via ActiveMQ notifying it to
      load assigned items from the LMS.
spec:
  schedule: {{ .Values.assignedItemsSchedulerJob.schedule | quote }}
  concurrencyPolicy: {{ .Values.assignedItemsSchedulerJob.concurrencyPolicy | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            {{- with .Values.assignedItemsSchedulerJob.podAnnotations }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          labels:
            {{- with .Values.assignedItemsSchedulerJob.podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          containers:
          - name: thub-event-scheduler-job
            image: "{{ .Values.assignedItemsSchedulerJob.image.repository }}:{{ .Values.assignedItemsSchedulerJob.image.tag | default (include "thub.eventSchedulerJobTag" .) }}"
            imagePullPolicy: {{ .Values.assignedItemsSchedulerJob.image.pullPolicy }}
            command: ["java", "-jar", "/home/app/application.jar", "jms", "{{ include "lms-data-service.assignedItemsSchedulerJobInputFile" . }}"]
            ports:
            - containerPort: {{ .Values.assignedItemsSchedulerJob.port }}
              name: http-server
            resources:
              {{- toYaml .Values.global.eventSchedulerResources | nindent 14 }}
            env:
            - name: server.port
              value: {{ .Values.assignedItemsSchedulerJob.port | quote }}
            - name: hclabs.scheduler.destinationQueue
              value: {{ include "thub.sfLmsDataJobQueueName" . }}
            - name: micronaut.jms.activemq.classic.connection-string
              valueFrom:
                configMapKeyRef:
                  name: mq-broker-config
                  key: spring.activemq.brokerUrl
            - name: micronaut.jms.activemq.classic.username
              valueFrom:
                configMapKeyRef:
                  name: mq-broker-config
                  key: spring.activemq.user
            - name: micronaut.jms.activemq.classic.password
              valueFrom:
                configMapKeyRef:
                  name: mq-broker-config
                  key: spring.activemq.password
            volumeMounts:
            - name: message-file
              mountPath: /home/app/temp
              readOnly: true
          volumes:
            - name: message-file
              configMap:
                # Provide the name of the ConfigMap containing the files you want
                # to add to the container
                name: {{ include "lms-data-service.eventSchedulerInputFilesConfigmapName" . }}
          restartPolicy: {{ .Values.assignedItemsSchedulerJob.restartPolicy }}
{{- end }}
